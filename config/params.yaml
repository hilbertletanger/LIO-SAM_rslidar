lio_sam:

  # Topics
  pointCloudTopic: "rslidar_points"               # Point cloud data
  imuTopic: "imu"                         # IMU data
  odomTopic: "odometry/imu"                   # IMU pre-preintegration odometry, same frequency as IMU
  gpsTopic: "odometry/gpsz"                   # GPS odometry topic from navsat, see module_navsat.launch file

  # Frames
  lidarFrame: "base_link"
  baselinkFrame: "base_link"
  odometryFrame: "odom"
  mapFrame: "map"

  # GPS Settings
  useImuHeadingInitialization: false           # if using GPS data, set to "true"
  useGpsElevation: false                      # if GPS elevation is bad, set to "false"
  gpsCovThreshold: 2.0                        # m^2, threshold for using GPS data
  poseCovThreshold: 25.0                      # m^2, threshold for using GPS data
  
  # Export settings
  savePCD: false                              # https://github.com/TixiaoShan/LIO-SAM/issues/3
  savePCDDirectory: "/Downloads/LOAM/"        # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation

  # Sensor Settings
  sensor: rslidar                            # lidar sensor type, either 'velodyne' or 'ouster' or'rslidar'
  N_SCAN: 32                                  # number of lidar channel (i.e., 16, 32, 64, 128)
  Horizon_SCAN: 1800                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048)
  downsampleRate: 1                           # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1
  lidarMinRange: 1.0                          # default: 1.0, minimum lidar range to be used
  lidarMaxRange: 1000.0                       # default: 1000.0, maximum lidar range to be used

  # IMU Settings
  imuAccNoise: 3.9939570888238808e-03
  imuGyrNoise: 1.5636343949698187e-03
  imuAccBiasN: 6.4356659353532566e-05
  imuGyrBiasN: 3.5640318696367613e-05
  imuGravity: 9.7964
  imuRPYWeight: 0.01  #default 0.01

  # Extrinsics (lidar -> IMU)  //用42.5度自行写
  # extrinsicTrans: [2.28, -0.0359808, 0.865]  #change
  # extrinsicRot: [0.737277337, 0.675590208, 0,
  #                    -0.675590208, 0.737277337, 0,
  #                    0, 0, 1]
  # extrinsicRPY: [0.737277337, 0.675590208, 0,
  #                    -0.675590208, 0.737277337, 0,
  #                    0, 0, 1]



  extrinsicTrans: [2.28, 0, 0.865]  #change
  # extrinsicTrans: [0, -0.0359808, 0.865]  #change

  # extrinsicRot: [1, 0, 0,
  #                   0,1, 0,
  #                    0, 0, 1]
  # extrinsicRPY: [1, 0, 0,
  #                   0,1, 0,
  #                    0, 0, 1]
  extrinsicRot: [0.99314, -0.108035, 0.0447294,
                  0.108961, 0.993869, -0.0187863,
                  -0.0424255, 0.0235312, 0.998822]
  extrinsicRPY: [0.99314, -0.108035, 0.0447294,
                  0.108961, 0.993869, -0.0187863,
                  -0.0424255, 0.0235312, 0.998822]
  # ver2标定 新版数据
  # extrinsicTrans: [2.28, -0.0359808, 0.865]  #change
  # extrinsicRot: [0.720734, 0.69183, 0.0437542,
  #                    -0.692034, 0.721753, 0.0127516,
  #                    -0.0404016, 0.0210889, 0.998961]
  # extrinsicRPY: [0.720734, 0.69183, 0.0437542,
  #                    -0.692034, 0.721753, 0.0127516,
  #                    -0.0404016, 0.0210889, 0.998961]

  # 用ver2标定
  # extrinsicTrans: [-3.13577, -0.0359808, -0.652011] #default
  # extrinsicTrans: [2.28, -0.0359808, 0.865]  #change
  # extrinsicRot: [0.794351,-0.606609, 0.0321233,
  #                   -0.606393, -0.794979, -0.0172033,
  #                    0.035973, -0.00581394,-0.999336]
  # extrinsicRPY: [0.794351,-0.606609, 0.0321233,
  #                   -0.606393, -0.794979, -0.0172033,
  #                    0.035973, -0.00581394,-0.999336]

  # 用原版标定 进行了调整
  # extrinsicTrans: [0.0, 0.0, 0.0]
  # extrinsicRot: [0.766437, -0.6423, 0.0050211,
  #                   -0.642186, -0.766095, 0.0263639,
  #                    0.013087, 0.0234307, -0.99964]
  # extrinsicRPY: [0.766437, -0.6423, 0.0050211,
  #                   -0.642186, -0.766095, 0.0263639,
  #                    0.013087, 0.0234307, -0.99964]
  #原版标定 不调整
  # extrinsicTrans: [0, 0, 0]
  # extrinsicRot: [-0.013087, -0.0234307, 0.99964,
  #                   -0.642186, -0.766095, -0.0263639,
  #                   0.766437, -0.6423, -0.0050211]
  # extrinsicRPY:  [-0.013087, -0.0234307, 0.99964,
  #                   -0.642186, -0.766095, -0.0263639,
  #                   0.766437, -0.6423, -0.0050211]


  # LOAM feature threshold
  edgeThreshold: 1.0
  surfThreshold: 0.1
  edgeFeatureMinValidNum: 10
  surfFeatureMinValidNum: 100

  # voxel filter paprams
  odometrySurfLeafSize: 0.4                     # default: 0.4 - outdoor, 0.2 - indoor
  mappingCornerLeafSize: 0.2                    # default: 0.2 - outdoor, 0.1 - indoor
  mappingSurfLeafSize: 0.4                      # default: 0.4 - outdoor, 0.2 - indoor

  # robot motion constraint (in case you are using a 2D robot)
  z_tollerance: 1000                            # meters
  rotation_tollerance: 1000                     # radians

  # CPU Params
  numberOfCores: 4                              # number of cores for mapping optimization
  mappingProcessInterval: 0.15                  # seconds, regulate mapping frequency

  # Surrounding map
  surroundingkeyframeAddingDistThreshold: 1.0   # meters, regulate keyframe adding threshold
  surroundingkeyframeAddingAngleThreshold: 0.2  # radians, regulate keyframe adding threshold
  surroundingKeyframeDensity: 2.0               # meters, downsample surrounding keyframe poses   
  surroundingKeyframeSearchRadius: 50.0         # meters, within n meters scan-to-map optimization (when loop closure disabled)

  # Loop closure
  loopClosureEnableFlag: true
  loopClosureFrequency: 1.0                     # Hz, regulate loop closure constraint add frequency
  surroundingKeyframeSize: 50                   # submap size (when loop closure enabled)
  historyKeyframeSearchRadius: 15.0             # meters, key frame that is within n meters from current pose will be considerd for loop closure
  historyKeyframeSearchTimeDiff: 30.0           # seconds, key frame that is n seconds older will be considered for loop closure
  historyKeyframeSearchNum: 25                  # number of hostory key frames will be fused into a submap for loop closure
  historyKeyframeFitnessScore: 0.3              # icp threshold, the smaller the better alignment

  # Visualization
  globalMapVisualizationSearchRadius: 1000.0    # meters, global map visualization radius
  globalMapVisualizationPoseDensity: 10.0       # meters, global map visualization keyframe density
  globalMapVisualizationLeafSize: 1.0           # meters, global map visualization cloud density




# Navsat (convert GPS coordinates to Cartesian)
navsat:
  frequency: 50
  wait_for_datum: false
  delay: 0.0
  magnetic_declination_radians: 0
  yaw_offset: 0
  zero_altitude: true
  broadcast_utm_transform: false
  broadcast_utm_transform_as_parent_frame: false
  publish_filtered_gps: false

# EKF for Navsat
ekf_gps:
  publish_tf: false
  map_frame: map
  odom_frame: odom
  base_link_frame: base_link
  world_frame: odom

  frequency: 50
  two_d_mode: false
  sensor_timeout: 0.01
  # -------------------------------------
  # External IMU:
  # -------------------------------------
  imu0: imu
  # make sure the input is aligned with ROS REP105. "imu_correct" is manually transformed by myself. EKF can also transform the data using tf between your imu and base_link
  imu0_config: [false, false, false,
                true,  true,  true,
                false, false, false,
                false, false, true,
                true,  true,  true]
  imu0_differential: false
  imu0_queue_size: 50 
  imu0_remove_gravitational_acceleration: true
  # -------------------------------------
  # Odometry (From Navsat):
  # -------------------------------------
  odom0: odometry/gps
  odom0_config: [true,  true,  true,
                 false, false, false,
                 false, false, false,
                 false, false, false,
                 false, false, false]
  odom0_differential: false
  odom0_queue_size: 10

  #                            x     y     z     r     p     y   x_dot  y_dot  z_dot  r_dot p_dot y_dot x_ddot y_ddot z_ddot
  process_noise_covariance: [  1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    10.0, 0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0.03, 0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0.03, 0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0.1,  0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0.25,  0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0.25,  0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0.04,  0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0.01, 0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0.01, 0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0.5,  0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0.01, 0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0.01,   0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0.015]
